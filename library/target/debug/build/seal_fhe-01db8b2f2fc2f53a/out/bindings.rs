/* automatically generated by rust-bindgen 0.66.1 */

extern "C" {
    pub fn BatchEncoder_Create(
        context: *mut ::std::os::raw::c_void,
        batch_encoder: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn BatchEncoder_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn BatchEncoder_Encode1(
        thisptr: *mut ::std::os::raw::c_void,
        count: u64,
        values: *mut u64,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn BatchEncoder_Encode2(
        thisptr: *mut ::std::os::raw::c_void,
        count: u64,
        values: *mut i64,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn BatchEncoder_Decode1(
        thisptr: *mut ::std::os::raw::c_void,
        plain: *mut ::std::os::raw::c_void,
        count: *mut u64,
        destination: *mut u64,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn BatchEncoder_Decode2(
        thisptr: *mut ::std::os::raw::c_void,
        plain: *mut ::std::os::raw::c_void,
        count: *mut u64,
        destination: *mut i64,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn BatchEncoder_GetSlotCount(
        thisptr: *mut ::std::os::raw::c_void,
        slot_count: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Create1(
        pool: *mut ::std::os::raw::c_void,
        cipher: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Create2(
        copy: *mut ::std::os::raw::c_void,
        cipher: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Create3(
        context: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
        cipher: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Create4(
        context: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        pool: *mut ::std::os::raw::c_void,
        cipher: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Create5(
        context: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        capacity: u64,
        pool: *mut ::std::os::raw::c_void,
        ciphertext: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Reserve1(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        size_capacity: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Reserve2(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        size_capacity: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Reserve3(
        thisptr: *mut ::std::os::raw::c_void,
        size_capacity: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Set(
        thisptr: *mut ::std::os::raw::c_void,
        assign: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Size(
        thisptr: *mut ::std::os::raw::c_void,
        size: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_SizeCapacity(
        thisptr: *mut ::std::os::raw::c_void,
        size_capacity: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_PolyModulusDegree(
        thisptr: *mut ::std::os::raw::c_void,
        poly_modulus_degree: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_CoeffModulusSize(
        thisptr: *mut ::std::os::raw::c_void,
        coeff_modulus_size: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_ParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_SetParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Resize1(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        size: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Resize2(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        size: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Resize3(
        thisptr: *mut ::std::os::raw::c_void,
        size: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Resize4(
        thisptr: *mut ::std::os::raw::c_void,
        size: u64,
        polyModulusDegree: u64,
        coeffModCount: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_GetDataAt1(
        thisptr: *mut ::std::os::raw::c_void,
        index: u64,
        data: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_GetDataAt2(
        thisptr: *mut ::std::os::raw::c_void,
        poly_index: u64,
        coeff_index: u64,
        data: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_SetDataAt(
        thisptr: *mut ::std::os::raw::c_void,
        index: u64,
        value: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_IsNTTForm(
        thisptr: *mut ::std::os::raw::c_void,
        is_ntt_form: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_SetIsNTTForm(
        thisptr: *mut ::std::os::raw::c_void,
        is_ntt_form: bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Scale(
        thisptr: *mut ::std::os::raw::c_void,
        scale: *mut f64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_SetScale(
        thisptr: *mut ::std::os::raw::c_void,
        scale: f64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_CorrectionFactor(
        thisptr: *mut ::std::os::raw::c_void,
        correction_factor: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_SetCorrectionFactor(
        thisptr: *mut ::std::os::raw::c_void,
        correction_factor: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Release(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_IsTransparent(
        thisptr: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Pool(
        thisptr: *mut ::std::os::raw::c_void,
        pool: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_SaveSize(
        thisptr: *mut ::std::os::raw::c_void,
        compr_mode: u8,
        result: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Save(
        thisptr: *mut ::std::os::raw::c_void,
        outptr: *mut u8,
        size: u64,
        compr_mode: u8,
        out_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_UnsafeLoad(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Ciphertext_Load(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CKKSEncoder_Create(
        context: *mut ::std::os::raw::c_void,
        ckks_encoder: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CKKSEncoder_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CKKSEncoder_Encode1(
        thisptr: *mut ::std::os::raw::c_void,
        value_count: u64,
        values: *mut f64,
        parms_id: *mut u64,
        scale: f64,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CKKSEncoder_Encode2(
        thisptr: *mut ::std::os::raw::c_void,
        value_count: u64,
        complex_values: *mut f64,
        parms_id: *mut u64,
        scale: f64,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CKKSEncoder_Encode3(
        thisptr: *mut ::std::os::raw::c_void,
        value: f64,
        parms_id: *mut u64,
        scale: f64,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CKKSEncoder_Encode4(
        thisptr: *mut ::std::os::raw::c_void,
        value_re: f64,
        value_im: f64,
        parms_id: *mut u64,
        scale: f64,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CKKSEncoder_Encode5(
        thisptr: *mut ::std::os::raw::c_void,
        value: i64,
        parms_id: *mut u64,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CKKSEncoder_Decode1(
        thisptr: *mut ::std::os::raw::c_void,
        plain: *mut ::std::os::raw::c_void,
        value_count: *mut u64,
        values: *mut f64,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CKKSEncoder_Decode2(
        thisptr: *mut ::std::os::raw::c_void,
        plain: *mut ::std::os::raw::c_void,
        value_count: *mut u64,
        values: *mut f64,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CKKSEncoder_SlotCount(
        thisptr: *mut ::std::os::raw::c_void,
        slot_count: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_TotalCoeffModulus(
        thisptr: *mut ::std::os::raw::c_void,
        count: *mut u64,
        total_coeff_modulus: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_TotalCoeffModulusBitCount(
        thisptr: *mut ::std::os::raw::c_void,
        bit_count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_Parms(
        thisptr: *mut ::std::os::raw::c_void,
        parms: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_Qualifiers(
        thisptr: *mut ::std::os::raw::c_void,
        epq: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_CoeffDivPlainModulus(
        thisptr: *mut ::std::os::raw::c_void,
        count: *mut u64,
        coeff_div: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_PlainUpperHalfThreshold(
        thisptr: *mut ::std::os::raw::c_void,
        puht: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_PlainUpperHalfIncrement(
        thisptr: *mut ::std::os::raw::c_void,
        count: *mut u64,
        puhi: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_UpperHalfThreshold(
        thisptr: *mut ::std::os::raw::c_void,
        count: *mut u64,
        uht: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_UpperHalfIncrement(
        thisptr: *mut ::std::os::raw::c_void,
        count: *mut u64,
        uhi: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_PrevContextData(
        thisptr: *mut ::std::os::raw::c_void,
        prev_data: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_NextContextData(
        thisptr: *mut ::std::os::raw::c_void,
        next_data: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ContextData_ChainIndex(
        thisptr: *mut ::std::os::raw::c_void,
        index: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Decryptor_Create(
        context: *mut ::std::os::raw::c_void,
        secret_key: *mut ::std::os::raw::c_void,
        decryptor: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Decryptor_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Decryptor_Decrypt(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Decryptor_DecryptAndExtractNoise(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        noise: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Decryptor_InvariantNoise(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        invariant_noise_budget: *mut f64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Decryptor_InvariantNoiseBudget(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        invariant_noise_budget: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_Create(
        copy: *mut ::std::os::raw::c_void,
        epq: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_ParametersSet(
        thisptr: *mut ::std::os::raw::c_void,
        parameters_set: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_UsingFFT(
        thisptr: *mut ::std::os::raw::c_void,
        using_fft: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_UsingNTT(
        thisptr: *mut ::std::os::raw::c_void,
        using_ntt: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_UsingBatching(
        thisptr: *mut ::std::os::raw::c_void,
        using_batching: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_UsingFastPlainLift(
        thisptr: *mut ::std::os::raw::c_void,
        using_fast_plain_lift: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_UsingDescendingModulusChain(
        thisptr: *mut ::std::os::raw::c_void,
        using_descending_modulus_chain: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_SecLevel(
        thisptr: *mut ::std::os::raw::c_void,
        sec_level: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_ParameterErrorName(
        thisptr: *mut ::std::os::raw::c_void,
        outstr: *mut ::std::os::raw::c_char,
        length: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EPQ_ParameterErrorMessage(
        thisptr: *mut ::std::os::raw::c_void,
        outstr: *mut ::std::os::raw::c_char,
        length: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_Create1(
        scheme: u8,
        enc_params: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_Create2(
        copy: *mut ::std::os::raw::c_void,
        enc_params: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_Set(
        thisptr: *mut ::std::os::raw::c_void,
        assign: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_GetPolyModulusDegree(
        thisptr: *mut ::std::os::raw::c_void,
        degree: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_SetPolyModulusDegree(
        thisptr: *mut ::std::os::raw::c_void,
        degree: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_GetCoeffModulus(
        thisptr: *mut ::std::os::raw::c_void,
        length: *mut u64,
        coeffs: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_SetCoeffModulus(
        thisptr: *mut ::std::os::raw::c_void,
        length: u64,
        coeffs: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_GetScheme(
        thisptr: *mut ::std::os::raw::c_void,
        scheme: *mut u8,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_GetParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_GetPlainModulus(
        thisptr: *mut ::std::os::raw::c_void,
        plain_modulus: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_SetPlainModulus1(
        thisptr: *mut ::std::os::raw::c_void,
        modulus: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_SetPlainModulus2(
        thisptr: *mut ::std::os::raw::c_void,
        plain_modulus: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_Equals(
        thisptr: *mut ::std::os::raw::c_void,
        otherptr: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_SaveSize(
        thisptr: *mut ::std::os::raw::c_void,
        compr_mode: u8,
        result: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_Save(
        thisptr: *mut ::std::os::raw::c_void,
        outptr: *mut u8,
        size: u64,
        compr_mode: u8,
        out_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn EncParams_Load(
        thisptr: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_Create(
        context: *mut ::std::os::raw::c_void,
        public_key: *mut ::std::os::raw::c_void,
        secret_key: *mut ::std::os::raw::c_void,
        encryptor: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_SetPublicKey(
        thisptr: *mut ::std::os::raw::c_void,
        public_key: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_SetSecretKey(
        thisptr: *mut ::std::os::raw::c_void,
        secret_key: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_Encrypt(
        thisptr: *mut ::std::os::raw::c_void,
        plaintext: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool_handle: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_EncryptReturnComponents(
        thisptr: *mut ::std::os::raw::c_void,
        plaintext: *mut ::std::os::raw::c_void,
        disable_special_modulus: bool,
        destination: *mut ::std::os::raw::c_void,
        u_destination: *mut ::std::os::raw::c_void,
        e_destination: *mut ::std::os::raw::c_void,
        remainder_destination: *mut ::std::os::raw::c_void,
        pool_handle: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_EncryptReturnComponentsSetSeed(
        thisptr: *mut ::std::os::raw::c_void,
        plaintext: *mut ::std::os::raw::c_void,
        disable_special_modulus: bool,
        destination: *mut ::std::os::raw::c_void,
        u_destination: *mut ::std::os::raw::c_void,
        e_destination: *mut ::std::os::raw::c_void,
        remainder_destination: *mut ::std::os::raw::c_void,
        seed: *mut ::std::os::raw::c_void,
        pool_handle: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_EncryptZero1(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        destination: *mut ::std::os::raw::c_void,
        pool_handle: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_EncryptZero2(
        thisptr: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool_handle: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_EncryptSymmetric(
        thisptr: *mut ::std::os::raw::c_void,
        plaintext: *mut ::std::os::raw::c_void,
        save_seed: bool,
        destination: *mut ::std::os::raw::c_void,
        pool_handle: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_EncryptZeroSymmetric1(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        save_seed: bool,
        destination: *mut ::std::os::raw::c_void,
        pool_handle: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_EncryptZeroSymmetric2(
        thisptr: *mut ::std::os::raw::c_void,
        save_seed: bool,
        destination: *mut ::std::os::raw::c_void,
        pool_handle: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Encryptor_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_Create(
        context: *mut ::std::os::raw::c_void,
        evaluator: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_Negate(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_Add(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted1: *mut ::std::os::raw::c_void,
        encrypted2: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_AddMany(
        thisptr: *mut ::std::os::raw::c_void,
        count: u64,
        encrypteds: *mut *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_AddPlain(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        plain: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_Sub(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted1: *mut ::std::os::raw::c_void,
        encrypted2: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_SubPlain(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        plain: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_Multiply(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted1: *mut ::std::os::raw::c_void,
        encrypted2: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_MultiplyMany(
        thisptr: *mut ::std::os::raw::c_void,
        count: u64,
        encrypteds: *mut *mut ::std::os::raw::c_void,
        relin_keys: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_MultiplyPlain(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        plain: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_Square(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_Relinearize(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        relinKeys: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_ModSwitchToNext1(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_ModSwitchToNext2(
        thisptr: *mut ::std::os::raw::c_void,
        plain: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_ModSwitchTo1(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_ModSwitchTo2(
        thisptr: *mut ::std::os::raw::c_void,
        plain: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_RescaleToNext(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_RescaleTo(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_Exponentiate(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        exponent: u64,
        relin_keys: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_TransformToNTT1(
        thisptr: *mut ::std::os::raw::c_void,
        plain: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        destination_ntt: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_TransformToNTT2(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        destination_ntt: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_TransformFromNTT(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted_ntt: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_ApplyGalois(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        galois_elt: u32,
        galois_keys: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_RotateRows(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        steps: ::std::os::raw::c_int,
        galoisKeys: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_RotateColumns(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        galois_keys: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_RotateVector(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        steps: ::std::os::raw::c_int,
        galois_keys: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_ComplexConjugate(
        thisptr: *mut ::std::os::raw::c_void,
        encrypted: *mut ::std::os::raw::c_void,
        galois_keys: *mut ::std::os::raw::c_void,
        destination: *mut ::std::os::raw::c_void,
        pool: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Evaluator_ContextUsingKeyswitching(
        thisptr: *mut ::std::os::raw::c_void,
        using_keyswitching: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn GaloisKeys_GetIndex(galois_elt: u32, index: *mut u64) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KeyGenerator_Create1(
        context: *mut ::std::os::raw::c_void,
        key_generator: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KeyGenerator_Create2(
        context: *mut ::std::os::raw::c_void,
        secret_key: *mut ::std::os::raw::c_void,
        key_generator: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KeyGenerator_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KeyGenerator_CreateRelinKeys(
        thisptr: *mut ::std::os::raw::c_void,
        save_seed: bool,
        relin_keys: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KeyGenerator_CreateGaloisKeysFromElts(
        thisptr: *mut ::std::os::raw::c_void,
        count: u64,
        galois_elts: *mut u32,
        save_seed: bool,
        galois_keys: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KeyGenerator_CreateGaloisKeysFromSteps(
        thisptr: *mut ::std::os::raw::c_void,
        count: u64,
        steps: *mut ::std::os::raw::c_int,
        save_seed: bool,
        galois_keys: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KeyGenerator_CreateGaloisKeysAll(
        thisptr: *mut ::std::os::raw::c_void,
        save_seed: bool,
        galois_keys: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KeyGenerator_CreatePublicKey(
        thisptr: *mut ::std::os::raw::c_void,
        save_seed: bool,
        public_key: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KeyGenerator_SecretKey(
        thisptr: *mut ::std::os::raw::c_void,
        secret_key: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KeyGenerator_ContextUsingKeyswitching(
        thisptr: *mut ::std::os::raw::c_void,
        using_keyswitching: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_Create1(
        kswitch_keys: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_Create2(
        copy: *mut ::std::os::raw::c_void,
        kswitch_keys: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_Set(
        thisptr: *mut ::std::os::raw::c_void,
        assign: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_Size(
        thisptr: *mut ::std::os::raw::c_void,
        size: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_RawSize(
        thisptr: *mut ::std::os::raw::c_void,
        key_count: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_GetKeyList(
        thisptr: *mut ::std::os::raw::c_void,
        index: u64,
        count: *mut u64,
        key_list: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_ClearDataAndReserve(
        thisptr: *mut ::std::os::raw::c_void,
        size: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_AddKeyList(
        thisptr: *mut ::std::os::raw::c_void,
        count: u64,
        key_list: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_GetParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_SetParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_Pool(
        thisptr: *mut ::std::os::raw::c_void,
        pool: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_SaveSize(
        thisptr: *mut ::std::os::raw::c_void,
        compr_mode: u8,
        result: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_Save(
        thisptr: *mut ::std::os::raw::c_void,
        outptr: *mut u8,
        size: u64,
        compr_mode: u8,
        out_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_UnsafeLoad(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn KSwitchKeys_Load(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryManager_GetPool1(
        prof_opt: ::std::os::raw::c_int,
        clear_on_destruction: bool,
        pool_handle: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryManager_GetPool2(
        pool_handle: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryManager_SwitchProfile(
        new_profile: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_Create1(
        handle: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_Create2(
        otherptr: *mut ::std::os::raw::c_void,
        handle: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_Destroy(thisptr: *mut ::std::os::raw::c_void)
        -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_Set(
        thisptr: *mut ::std::os::raw::c_void,
        assignptr: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_Global(
        handle: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_ThreadLocal(
        handle: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_New(
        clear_on_destruction: bool,
        handle: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_PoolCount(
        thisptr: *mut ::std::os::raw::c_void,
        count: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_AllocByteCount(
        thisptr: *mut ::std::os::raw::c_void,
        count: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_UseCount(
        thisptr: *mut ::std::os::raw::c_void,
        count: *mut ::std::os::raw::c_long,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_IsInitialized(
        thisptr: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn MemoryPoolHandle_Equals(
        thisptr: *mut ::std::os::raw::c_void,
        otherptr: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Create1(
        value: u64,
        small_modulus: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Create2(
        copy: *mut ::std::os::raw::c_void,
        small_modulus: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_IsZero(
        thisptr: *mut ::std::os::raw::c_void,
        is_zero: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_IsPrime(
        thisptr: *mut ::std::os::raw::c_void,
        is_prime: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Value(
        thisptr: *mut ::std::os::raw::c_void,
        value: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_BitCount(
        thisptr: *mut ::std::os::raw::c_void,
        bit_count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_UInt64Count(
        thisptr: *mut ::std::os::raw::c_void,
        uint64_count: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Set1(
        thisptr: *mut ::std::os::raw::c_void,
        assign: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Set2(thisptr: *mut ::std::os::raw::c_void, value: u64)
        -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_ConstRatio(
        thisptr: *mut ::std::os::raw::c_void,
        length: u64,
        ratio: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Equals1(
        thisptr: *mut ::std::os::raw::c_void,
        other: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Equals2(
        thisptr: *mut ::std::os::raw::c_void,
        other: u64,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_SaveSize(
        thisptr: *mut ::std::os::raw::c_void,
        compr_mode: u8,
        result: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Save(
        thisptr: *mut ::std::os::raw::c_void,
        outptr: *mut u8,
        size: u64,
        compr_mode: u8,
        out_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Load(
        thisptr: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Modulus_Reduce(
        thisptr: *mut ::std::os::raw::c_void,
        value: u64,
        result: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CoeffModulus_MaxBitCount(
        poly_modulus_degree: u64,
        sec_level: ::std::os::raw::c_int,
        bit_count: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CoeffModulus_BFVDefault(
        poly_modulus_degree: u64,
        sec_level: ::std::os::raw::c_int,
        length: *mut u64,
        coeffs: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CoeffModulus_Create1(
        poly_modulus_degree: u64,
        length: u64,
        bit_sizes: *mut ::std::os::raw::c_int,
        coeffs: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn CoeffModulus_Create2(
        poly_modulus_degree: u64,
        length: u64,
        bit_sizes: *mut ::std::os::raw::c_int,
        plain_modulus: *mut ::std::os::raw::c_void,
        coeffs: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Create1(
        memoryPoolHandle: *mut ::std::os::raw::c_void,
        plaintext: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Create2(
        coeffCount: u64,
        memoryPoolHandle: *mut ::std::os::raw::c_void,
        plaintext: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Create3(
        capacity: u64,
        coeffCount: u64,
        memoryPoolHandle: *mut ::std::os::raw::c_void,
        plaintext: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Create4(
        hex_poly: *mut ::std::os::raw::c_char,
        memoryPoolHandle: *mut ::std::os::raw::c_void,
        plaintext: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Create5(
        copy: *mut ::std::os::raw::c_void,
        plaintext: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Set1(
        thisptr: *mut ::std::os::raw::c_void,
        assign: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Set2(
        thisptr: *mut ::std::os::raw::c_void,
        hex_poly: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Set3(
        thisptr: *mut ::std::os::raw::c_void,
        const_coeff: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Set4(
        thisptr: *mut ::std::os::raw::c_void,
        count: u64,
        coeffs: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_CoeffCount(
        thisptr: *mut ::std::os::raw::c_void,
        coeff_count: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_CoeffAt(
        thisptr: *mut ::std::os::raw::c_void,
        index: u64,
        coeff: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_SetCoeffAt(
        thisptr: *mut ::std::os::raw::c_void,
        index: u64,
        value: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_ToString(
        thispt: *mut ::std::os::raw::c_void,
        outstr: *mut ::std::os::raw::c_char,
        length: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_IsNTTForm(
        thisptr: *mut ::std::os::raw::c_void,
        is_ntt_form: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_IsZero(
        thisptr: *mut ::std::os::raw::c_void,
        is_zero: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_SetZero1(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_SetZero2(
        thisptr: *mut ::std::os::raw::c_void,
        start_coeff: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_SetZero3(
        thisptr: *mut ::std::os::raw::c_void,
        start_coeff: u64,
        length: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_GetParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_SetParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Reserve(
        thisptr: *mut ::std::os::raw::c_void,
        capacity: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Resize(
        thisptr: *mut ::std::os::raw::c_void,
        coeff_count: u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_ShrinkToFit(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Release(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Capacity(
        thisptr: *mut ::std::os::raw::c_void,
        capacity: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_SignificantCoeffCount(
        thisptr: *mut ::std::os::raw::c_void,
        significant_coeff_count: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_NonZeroCoeffCount(
        thisptr: *mut ::std::os::raw::c_void,
        nonzero_coeff_count: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Scale(
        thisptr: *mut ::std::os::raw::c_void,
        scale: *mut f64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_SetScale(
        thisptr: *mut ::std::os::raw::c_void,
        scale: f64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Equals(
        thisptr: *mut ::std::os::raw::c_void,
        other: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_SwapData(
        thisptr: *mut ::std::os::raw::c_void,
        count: u64,
        new_data: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Pool(
        thisptr: *mut ::std::os::raw::c_void,
        pool: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_SaveSize(
        thisptr: *mut ::std::os::raw::c_void,
        compr_mode: u8,
        result: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Save(
        thisptr: *mut ::std::os::raw::c_void,
        outptr: *mut u8,
        size: u64,
        compr_mode: u8,
        out_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_UnsafeLoad(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Plaintext_Load(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_Create(
        memoryPoolHandle: *mut ::std::os::raw::c_void,
        poly_array: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_CreateFromCiphertext(
        memoryPoolHandle: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        ciphertext: *mut ::std::os::raw::c_void,
        poly_array: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_CreateFromPublicKey(
        memoryPoolHandle: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        public_key: *mut ::std::os::raw::c_void,
        poly_array: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_Copy(
        copy: *mut ::std::os::raw::c_void,
        poly_array: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_IsReserved(
        thisptr: *mut ::std::os::raw::c_void,
        is_reserved: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_IsRns(
        thisptr: *mut ::std::os::raw::c_void,
        is_rns: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_IsMultiprecision(
        thisptr: *mut ::std::os::raw::c_void,
        is_multiprecision: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_ToRns(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_ToMultiprecision(
        thisptr: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_GetPolynomial(
        thisptr: *mut ::std::os::raw::c_void,
        poly_index: u64,
        data: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_ExportSize(
        thisptr: *mut ::std::os::raw::c_void,
        size: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_PerformExport(
        thisptr: *mut ::std::os::raw::c_void,
        data: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_PolySize(
        thisptr: *mut ::std::os::raw::c_void,
        size: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_PolyModulusDegree(
        thisptr: *mut ::std::os::raw::c_void,
        size: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_CoeffModulusSize(
        thisptr: *mut ::std::os::raw::c_void,
        size: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PolynomialArray_Drop(
        thisptr: *mut ::std::os::raw::c_void,
        poly_array: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_Create1(
        public_key: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_Create2(
        copy: *mut ::std::os::raw::c_void,
        public_key: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_Set(
        thisptr: *mut ::std::os::raw::c_void,
        assign: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_Data(
        thisptr: *mut ::std::os::raw::c_void,
        data: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_ParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_Pool(
        thisptr: *mut ::std::os::raw::c_void,
        pool: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_SaveSize(
        thisptr: *mut ::std::os::raw::c_void,
        compr_mode: u8,
        result: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_Save(
        thisptr: *mut ::std::os::raw::c_void,
        outptr: *mut u8,
        size: u64,
        compr_mode: u8,
        out_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_UnsafeLoad(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn PublicKey_Load(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn RelinKeys_GetIndex(key_power: u64, index: *mut u64) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_Create(
        encryptionParams: *mut ::std::os::raw::c_void,
        expand_mod_chain: bool,
        sec_level: ::std::os::raw::c_int,
        context: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_KeyParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_FirstParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_LastParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_ParametersSet(
        thisptr: *mut ::std::os::raw::c_void,
        params_set: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_KeyContextData(
        thisptr: *mut ::std::os::raw::c_void,
        context_data: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_FirstContextData(
        thisptr: *mut ::std::os::raw::c_void,
        context_data: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_LastContextData(
        thisptr: *mut ::std::os::raw::c_void,
        context_data: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_GetContextData(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
        context_data: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_UsingKeyswitching(
        thisptr: *mut ::std::os::raw::c_void,
        using_keyswitching: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_ParameterErrorName(
        thisptr: *mut ::std::os::raw::c_void,
        outstr: *mut ::std::os::raw::c_char,
        length: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SEALContext_ParameterErrorMessage(
        thisptr: *mut ::std::os::raw::c_void,
        outstr: *mut ::std::os::raw::c_char,
        length: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_Create1(
        secret_key: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_Create2(
        copy: *mut ::std::os::raw::c_void,
        secret_key: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_Set(
        thisptr: *mut ::std::os::raw::c_void,
        assign: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_Data(
        thisptr: *mut ::std::os::raw::c_void,
        data: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_Destroy(thisptr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_ParmsId(
        thisptr: *mut ::std::os::raw::c_void,
        parms_id: *mut u64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_Pool(
        thisptr: *mut ::std::os::raw::c_void,
        pool: *mut *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_SaveSize(
        thisptr: *mut ::std::os::raw::c_void,
        compr_mode: u8,
        result: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_Save(
        thisptr: *mut ::std::os::raw::c_void,
        outptr: *mut u8,
        size: u64,
        compr_mode: u8,
        out_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_UnsafeLoad(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn SecretKey_Load(
        thisptr: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        inptr: *mut u8,
        size: u64,
        in_bytes: *mut i64,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Serialization_SEALMagic(result: *mut u16) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Serialization_SEALHeaderSize(result: *mut u8) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Serialization_IsSupportedComprMode(
        compr_mode: u8,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Serialization_ComprModeDefault(result: *mut u8) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Serialization_IsCompatibleVersion(
        headerptr: *mut u8,
        size: u64,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn Serialization_IsValidHeader(
        headerptr: *mut u8,
        size: u64,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ValCheck_Plaintext_IsValidFor(
        plaintext: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ValCheck_Ciphertext_IsValidFor(
        ciphertext: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ValCheck_SecretKey_IsValidFor(
        secret_key: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ValCheck_PublicKey_IsValidFor(
        public_key: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ValCheck_KSwitchKeys_IsValidFor(
        kswitch_keys: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ValCheck_RelinKeys_IsValidFor(
        relin_keys: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn ValCheck_GaloisKeys_IsValidFor(
        galois_keys: *mut ::std::os::raw::c_void,
        context: *mut ::std::os::raw::c_void,
        result: *mut bool,
    ) -> ::std::os::raw::c_long;
}
